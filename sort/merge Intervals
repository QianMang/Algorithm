//leetcode #56. merge Intervals

//比较函数
bool cmp(const vector<int>& a,const vector<int>& b){
        return a[0] < b[0];
}

class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        sort(intervals.begin(),intervals.end(),cmp);
        vector<vector<int>> result;
        if(intervals.size()==0){
            return result;
        }
        vector<int> curInterval={0,0};
        
        int curBegin=intervals[0][0];
        int curEnd=intervals[0][1];
        curInterval[0]=curBegin;
        curInterval[1]=curEnd;
        for(size_t i=1;i<intervals.size();++i){
            if(intervals[i][0]<=curEnd){
                if(intervals[i][1]<=curEnd){
                    continue;
                }else{
                    curEnd=intervals[i][1];
                    curInterval[1]=curEnd;
                }
            }else{
                curBegin=intervals[i][0];
                curEnd=intervals[i][1];
                result.push_back(curInterval);
                curInterval[0]=curBegin;
                curInterval[1]=curEnd;
            }
        }
        result.push_back(curInterval);
        return result;
    }
};
